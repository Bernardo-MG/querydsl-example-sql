<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <!-- ********************************************** -->
   <!-- ****************** BASE POM ****************** -->
   <!-- ********************************************** -->

   <parent>
      <groupId>com.bernardomg.maven</groupId>
      <artifactId>base-pom</artifactId>
      <version>1.5.3</version>
   </parent>

   <!-- ********************************************** -->
   <!-- **************** PROJECT INFO **************** -->
   <!-- ********************************************** -->

   <groupId>com.bernardomg.example</groupId>
   <artifactId>querydsl-example-sql</artifactId>
   <version>1.2.0-SNAPSHOT</version>
   <packaging>jar</packaging>

   <name>Querydsl Example for SQL</name>
   <description>An example showing how to use Querydsl for SQL</description>
   <url>https://github.com/bernardo-mg/querydsl-example-sql</url>
   <inceptionYear>2022</inceptionYear>

   <licenses>
      <license>
         <name>MIT License</name>
         <url>http://www.opensource.org/licenses/mit-license.php</url>
         <distribution>repo</distribution>
      </license>
   </licenses>

   <!-- ********************************************** -->
   <!-- ************ RESOURCES AND SERVICES ********** -->
   <!-- ********************************************** -->

   <scm>
      <connection>scm:git:https://github.com/bernardo-mg/querydsl-example-sql.git</connection>
      <developerConnection>scm:git:https://github.com/bernardo-mg/querydsl-example-sql.git</developerConnection>
      <tag>head</tag>
      <url>https://www.github.com/bernardo-mg/querydsl-example-sql</url>
   </scm>

   <issueManagement>
      <system>GitHub</system>
      <url>https://www.github.com/bernardo-mg/querydsl-example-sql/issues</url>
   </issueManagement>

   <ciManagement>
      <system>Github</system>
      <url>https://www.github.com/bernardo-mg/querydsl-example-sql/actions</url>
      <notifiers />
   </ciManagement>

   <!-- ********************************************** -->
   <!-- *********** ORGANIZATION AND MEMBERS ********* -->
   <!-- ********************************************** -->

   <organization>
      <name>Bernardo Martínez Garrido</name>
      <url>https://github.com/Bernardo-MG</url>
   </organization>

   <developers>
      <developer>
         <id>bmg</id>
         <name>Bernardo Martínez Garrido</name>
         <email>programming@bernardomg.com</email>
         <url>https://github.com/Bernardo-MG</url>
         <organization>Bernardo Martínez Garrido</organization>
         <organizationUrl>https://github.com/Bernardo-MG</organizationUrl>
         <roles>
            <role>Developer</role>
         </roles>
         <timezone>+1</timezone>
         <properties />
      </developer>
   </developers>

   <!-- ********************************************** -->
   <!-- ****************** PROFILES ****************** -->
   <!-- ********************************************** -->

   <profiles>
      <!-- ============================================== -->
      <!-- ============= DEPLOYMENT PROFILES ============ -->
      <!-- ============================================== -->
      <profile>
         <!-- Site deployment profile -->
         <!-- Sets the site repository to point to the releases repo -->
         <id>deployment-site</id>
         <activation>
            <!-- Active by default so the repository appears in the reports -->
            <activeByDefault>true</activeByDefault>
         </activation>
         <distributionManagement>
            <site>
               <id>site</id>
               <name>Project Documentation Site</name>
               <!-- The URL should be set externally -->
               <url>${site.url}</url>
            </site>
         </distributionManagement>
      </profile>
      <!-- ============================================== -->
      <!-- ============= DATABASE PROFILES ============== -->
      <!-- ============================================== -->
      <profile>
         <!-- Default database profile -->
         <!-- Required when the tests are disabled -->
         <id>default</id>
         <properties>
            <!-- Access data -->
            <database.url>jdbc:h2:mem:testdb</database.url>
            <database.username>sa</database.username>
            <database.password></database.password>
            <!-- Spring context -->
            <spring.profile.database>h2</spring.profile.database>
         </properties>
         <dependencies>
            <dependency>
               <!-- H2 database -->
               <groupId>com.h2database</groupId>
               <artifactId>h2</artifactId>
               <version>${h2.version}</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
      <profile>
         <!-- H2 database profile -->
         <!-- Prepares the project to make use of an H2 in-memory database -->
         <id>h2</id>
         <properties>
            <!-- Access data -->
            <database.url>jdbc:h2:mem:testdb</database.url>
            <database.username>sa</database.username>
            <database.password></database.password>
            <!-- Spring context -->
            <spring.profile.database>h2</spring.profile.database>
         </properties>
         <dependencies>
            <dependency>
               <!-- H2 database -->
               <groupId>com.h2database</groupId>
               <artifactId>h2</artifactId>
               <version>${h2.version}</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
      <profile>
         <!-- MySQL database profile -->
         <!-- Prepares the project to make use of an H2 in-memory database -->
         <id>mysql</id>
         <properties>
            <!-- Access data -->
            <database.url>jdbc:mysql://localhost:3306/testdb</database.url>
            <database.username>user</database.username>
            <database.password>password</database.password>
            <!-- Spring context -->
            <spring.profile.database>mysql</spring.profile.database>
         </properties>
         <dependencies>
            <dependency>
               <!-- MySQL connector -->
               <groupId>mysql</groupId>
               <artifactId>mysql-connector-java</artifactId>
               <version>${mysql.version}</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
      <profile>
         <!-- Postgres database profile -->
         <!-- Prepares the project to make use of a Postgres database -->
         <id>postgres</id>
         <properties>
            <!-- Access data -->
            <database.url>jdbc:postgresql://localhost:5432/testdb</database.url>
            <database.username>postgres</database.username>
            <database.password>password</database.password>
            <!-- Spring context -->
            <spring.profile.database>postgres</spring.profile.database>
         </properties>
         <dependencies>
            <dependency>
               <!-- Postgres connector -->
               <groupId>org.postgresql</groupId>
               <artifactId>postgresql</artifactId>
               <version>${postgresql.version}</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
   </profiles>

   <!-- ********************************************** -->
   <!-- **************** PROPERTIES ****************** -->
   <!-- ********************************************** -->

   <properties>
      <!-- ============================================== -->
      <!-- =============== MAVEN VERSION ================ -->
      <!-- ============================================== -->
      <maven.version>3.5.2</maven.version>
      <!-- ============================================== -->
      <!-- =============== MANIFEST DATA ================ -->
      <!-- ============================================== -->
      <manifest.name>com/bernardomg/example/querydsl/sql</manifest.name>
      <!-- ============================================== -->
      <!-- ============== CODE GENERATION =============== -->
      <!-- ============================================== -->
      <codegen.skip>true</codegen.skip>
      <codegen.url>
         <![CDATA[jdbc:mysql://localhost:3306/testdb?user=root&password=password&nullNamePatternMatchesAll=true]]>
      </codegen.url>
      <!-- ============================================== -->
      <!-- =========== DEPENDENCIES VERSIONS ============ -->
      <!-- ============================================== -->
      <h2.version>1.4.200</h2.version>
      <hikari.version>3.4.5</hikari.version>
      <javaee.api.version>2.2</javaee.api.version>
      <jaxb.version>2.3.1</jaxb.version>
      <junit.jupiter.version>5.8.0</junit.jupiter.version>
      <liquibase.version>4.4.3</liquibase.version>
      <log4j.version>2.14.1</log4j.version>
      <mysql.version>8.0.21</mysql.version>
      <postgresql.version>42.2.24</postgresql.version>
      <querydsl.version>5.0.0</querydsl.version>
      <slf4j.version>2.0.0-alpha5</slf4j.version>
      <spring.version>5.3.10</spring.version>
      <snakeyaml.version>1.29</snakeyaml.version>
      <!-- ============================================== -->
      <!-- ============ PLUGIN CONFIGURATION ============ -->
      <!-- ============================================== -->
      <!-- Checkstyle customized rules file -->
      <checkstyle.config.location>${project.basedir}/src/config/checkstyle/checkstyle-rules.xml</checkstyle.config.location>
      <!-- Excludes generated code for Checkstyle -->
      <checkstyle.excludes>**/Q*Entity</checkstyle.excludes>
      <!-- Exclusion patterns for SpotBugs -->
      <spotbugs.excludeFilterFile>${project.basedir}/src/config/spotbugs/spotbugs-exclude.xml</spotbugs.excludeFilterFile>
      <!-- ============================================== -->
      <!-- ================= MAVEN SITE ================= -->
      <!-- ============================================== -->
      <site.skin.version>2.3.0</site.skin.version>
   </properties>

   <!-- ********************************************** -->
   <!-- *************** DEPENDENCIES ***************** -->
   <!-- ********************************************** -->

   <dependencyManagement>
      <dependencies>
         <dependency>
            <!-- JUnit BOM -->
            <groupId>org.junit</groupId>
            <artifactId>junit-bom</artifactId>
            <version>${junit.jupiter.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <!-- Spring Framework BOM -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-framework-bom</artifactId>
            <version>${spring.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <!-- Querydsl BOM -->
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-bom</artifactId>
            <version>${querydsl.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <!-- ============================================== -->
      <!-- ================== QUERYDSL ================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Querydsl Core -->
         <groupId>com.querydsl</groupId>
         <artifactId>querydsl-core</artifactId>
      </dependency>
      <dependency>
         <!-- Querydsl SQL -->
         <groupId>com.querydsl</groupId>
         <artifactId>querydsl-sql</artifactId>
      </dependency>
      <!-- ============================================== -->
      <!-- ======= TEST ENVIRONMENT DEPENDENCIES ======== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Hikari CP -->
         <groupId>com.zaxxer</groupId>
         <artifactId>HikariCP</artifactId>
         <version>${hikari.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Liquibase -->
         <groupId>org.liquibase</groupId>
         <artifactId>liquibase-core</artifactId>
         <version>${liquibase.version}</version>
         <exclusions>
            <exclusion>
               <groupId>ch.qos.logback</groupId>
               <artifactId>logback-classic</artifactId>
            </exclusion>
         </exclusions>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- SnakeYAML -->
         <groupId>org.yaml</groupId>
         <artifactId>snakeyaml</artifactId>
         <version>${snakeyaml.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- JUnit Jupiter Engine -->
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- JUnit Jupiter Platform -->
         <groupId>org.junit.platform</groupId>
         <artifactId>junit-platform-runner</artifactId>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <!-- JUnit 3 -->
               <groupId>junit</groupId>
               <artifactId>junit</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <!-- Spring AOP -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-aop</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Beans -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Framework Context -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Test -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Transactions -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-tx</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring JDBC -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <scope>test</scope>
      </dependency>
      <!-- ********************************************** -->
      <!-- ****************** QUERYDSL ****************** -->
      <!-- ********************************************** -->
      <dependency>
         <!-- Querydsl Spring -->
         <groupId>com.querydsl</groupId>
         <artifactId>querydsl-sql-spring</artifactId>
         <scope>test</scope>
      </dependency>
      <!-- ********************************************** -->
      <!-- ****************** LOGGERS ******************* -->
      <!-- ********************************************** -->
      <dependency>
         <!-- SLF4J API -->
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Log4j SLF4J Bridge -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-slf4j-impl</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Log4j core -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <!-- ********************************************** -->
      <!-- ************ VERSION ENFORCEMENT ************* -->
      <!-- ********************************************** -->
      <dependency>
         <!-- JAXB API -->
         <groupId>javax.xml.bind</groupId>
         <artifactId>jaxb-api</artifactId>
         <version>${jaxb.version}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <!-- ********************************************** -->
   <!-- ******************* BUILD ******************** -->
   <!-- ********************************************** -->

   <build>
      <defaultGoal>clean package</defaultGoal>
      <testResources>
         <testResource>
            <directory>src/test/resources/</directory>
         </testResource>
         <testResource>
            <!-- Test resources -->
            <directory>src/test/resources/</directory>
            <includes>
               <!-- Filter the contexts -->
               <include>context/**/*.xml</include>
               <!-- Filter the properties -->
               <include>config/**/*.properties</include>
            </includes>
            <filtering>true</filtering>
         </testResource>
      </testResources>
      <pluginManagement>
         <plugins>
            <plugin>
               <!-- Querydsl -->
               <groupId>com.querydsl</groupId>
               <artifactId>querydsl-maven-plugin</artifactId>
               <version>${plugin.querydsl.version}</version>
            </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <!-- Changes -->
            <!-- Takes care of the changes log -->
            <!-- It is set to also validate the changes log file -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-changes-plugin</artifactId>
            <executions>
               <!-- Changes plugin is bound to the pre-site phase -->
               <execution>
                  <id>check-changes</id>
                  <phase>pre-site</phase>
                  <goals>
                     <goal>changes-check</goal>
                  </goals>
               </execution>
               <execution>
                  <id>validate-changes</id>
                  <phase>pre-site</phase>
                  <goals>
                     <goal>changes-validate</goal>
                  </goals>
                  <configuration>
                     <failOnError>true</failOnError>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <!-- Site -->
            <!-- Generates the Maven Site -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <dependencies>
               <dependency>
                  <!-- Docs Maven Skin -->
                  <groupId>com.bernardomg.maven.skins</groupId>
                  <artifactId>docs-maven-skin</artifactId>
                  <version>${site.skin.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <!-- Resources -->
            <!-- Handles the project resources. -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
               <!-- Variables to to override will be delimited with a @. -->
               <!-- This avoids collisions with Spring variables. -->
               <!-- So instead of replacing ${project.name} Maven will replace @project.name@. -->
               <useDefaultDelimiters>false</useDefaultDelimiters>
               <delimiters>
                  <delimiter>@</delimiter>
               </delimiters>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <!-- ********************************************** -->
   <!-- ****************** REPORTS ******************* -->
   <!-- ********************************************** -->

   <reporting>
      <plugins>
         <plugin>
            <!-- Javadoc -->
            <!-- Generates the javadocs -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
               <links>
                  <link>https://javadoc.io/doc/org.eclipse.persistence/javax.persistence/</link>
               </links>
               <sourceFileExcludes>
                  <!-- Excludes metamodel -->
                  <exclude>**/Q*Entity*</exclude>
               </sourceFileExcludes>
            </configuration>
         </plugin>
         <plugin>
            <!-- PMD -->
            <!-- Checks that the code complies with a series of code quality rules -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <configuration>
               <rulesets>
                  <!-- The customized rules file -->
                  <ruleset>${project.basedir}/src/config/pmd/pmd-rules.xml</ruleset>
               </rulesets>
               <excludes>
                  <!-- Excludes metamodel -->
                  <exclude>**/Q*Entity*</exclude>
               </excludes>
            </configuration>
         </plugin>
      </plugins>
   </reporting>

</project>